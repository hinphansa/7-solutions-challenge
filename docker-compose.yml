services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: 7-solutions-challenge
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  mongo-migrate:
    build:
      context: .
      dockerfile: docker/Dockerfile.migrate
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://root:example@mongo:27017
      MONGO_DB_NAME: 7-solutions-challenge
    restart: "no"
    entrypoint: ["/migrate"]

  http:
    build:
      context: .
      dockerfile: docker/Dockerfile.http
    ports:
      - 8080:8080
    depends_on:
      mongo:
        condition: service_healthy
    restart: "no"
    entrypoint: ["/http"]

volumes:
  mongo_data:
    driver: local
